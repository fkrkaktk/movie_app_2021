{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","idx","slice","Home","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","About","props","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8SAgDeA,MAvCf,YAA6D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAChD,OAEE,aADA,CACC,IAAD,CAAMC,GAAI,CACRC,SAAS,UAAD,OAAWP,GAEnBQ,MAAO,CACLP,KAAKA,EACLC,QACAC,UACAC,SACAC,WARJ,SAWE,sBAAKI,UAAU,QAAf,UAEE,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UAEE,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAE7B,oBAAIQ,UAAU,gBAAd,SAA+BJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OAAgB,oBAAcL,UAAU,gBAAxB,SAAyCI,GAAhCC,QACnE,oBAAGL,UAAU,iBAAb,UAA+BN,EAAQY,MAAM,EAAG,KAAhD,kBC1BJC,G,kNACJR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,4DAPQ,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAKZM,QAAQC,IAAIP,GAEZ,EAAKQ,SAAS,CAAER,SAAQD,WAAW,IAXzB,2C,uDAcZ,WAEEU,KAAKR,c,oBAGP,WACE,MAA8BQ,KAAKnB,MAA3BS,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACIS,EAAON,KACT,SACEgB,GADF,OAGE,cAAC,EAAD,CAGE5B,GAAI4B,EAAM5B,GACVC,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbC,QAASyB,EAAMzB,QACfC,OAAQwB,EAAMC,mBACdxB,OAAQuB,EAAMvB,QANTuB,EAAM5B,e,GAzCR8B,IAAMC,YAyDVf,ICxDAgB,MALf,SAAeC,GAEX,OADAT,QAAQC,IAAIQ,GACN,uFCKJC,E,uKACJ,WACEV,QAAQC,IAAIE,KAAKM,OACjB,MAA8BN,KAAKM,MAA3BE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAEKC,IAAnBF,EAAS3B,OACX4B,EAAQE,KAAK,O,oBAIjB,WACA,IAAOH,EAAYR,KAAKM,MAAjBE,SACP,OAAGA,EAAS3B,MACJ,+BAAO2B,EAAS3B,MAAMN,QAEtB,S,GAfW4B,IAAMC,WAoBZG,ICTAK,MAjBf,WACI,OAAO,gCAIH,cAAC,IAAD,CAAMjC,GAAG,IAAT,kBAQA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCSOkC,MAff,WACE,OACA,eAAC,IAAD,WACE,cAAC,EAAD,IAIA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWX,IAEhC,cAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWT,QCfxCU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c21ec0af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\n// 컴포넌트가 state를 필요로 하지않는다면 class컴포넌트일 필요가 없다.\r\n// function componenet로 만들어도 충분!!!\r\n\r\n// Movie({})에서 중괄호 안에 있는게 전부 prop임\r\nfunction Movie({id, year, title, summary, poster, genres }) {\r\n  return (\r\n    // 이렇게 pathname에 있는 링크에 프롭스로 데이터를 전달해 줄수 있음. 클릭해서 들어가보면 보낸 props가 다 와있음\r\n    <Link to={{\r\n      pathname:`/movie/${id}`,\r\n      // prop에 있는거 전부다에 Link를 걸어버림\r\n      state: {\r\n        year:year,\r\n        title,\r\n        summary,\r\n        poster,\r\n        genres\r\n      }\r\n    }}>\r\n      <div className=\"movie\">\r\n        {/* alt는 그림에 마우스 올렸을때 뜨는 설명이다. 시각장애인들을 위한것 */}\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          {/* 자바스크립트에서 스타일을 쓸려면 style={{}} 를 쓰면됨 */}\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          {/* map을 쓰게될 경우 key를 필요로 하지만 map에서 이렇게 idx칸을 만들어서 줘도 됨(idx는 번호임) */}\r\n          <ul className=\"movie__genres\">{genres.map((genre, idx) => <li key={idx} className=\"genres__genre\">{genre}</li>)}</ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n\tgenres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    \r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    console.log(movies);\r\n    \r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state; \r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            { movies.map(\r\n            (\r\n              movie \r\n            ) => (\r\n              <Movie\r\n                \r\n                key={movie.id} \r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About(props){\r\n    console.log(props);\r\n    return<span>About this page: I built it because I love movies.</span>\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n// function Detail({location}){ //이렇게 적으면 받아오는 거의 전체가 아니라 location부분만 받아옴 전체 모양은 원래 {history : {...}, location : {...}, match : {...}...}이였음\r\n//     console.log(location); //카드를 클릭안하고 그냥 페이지로 가면 props를 보내온게 없어서 state가 undefined로 뜰거임\r\n//     return <span>Hello</span>\r\n// }\r\n\r\n// 위의 function 컴포넌트를 class컴포넌트로 변환\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const { location, history } = this.props;\r\n    // console.log(location.state);\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\t// componentDidMount 보다 render가 먼저 실행됨.\r\n  render() {\r\n\t\tconst {location} = this.props;\r\n\t\tif(location.state){\r\n\t\t\treturn <span>{location.state.title}</span>;\r\n\t\t} else{\r\n\t\t\treturn null;\r\n\t\t}\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navigation(){\r\n    return <div>\r\n        {/* a href=\"/\" 로 하면 누를때마다 페이지가 새로 만들어져서 안좋음 */}\r\n        {/* 그래서 대신 Link to를 사용 */}\r\n        {/* Link to는 반드시 라우터안에서만 사용가능하다(이 파일을 지금 App.js에서 보면 HashRouter안에 있음) */}\r\n        <Link to=\"/\">Home</Link>\r\n        {/* 링크를 눌렀을때 뜨는 창에 props를 전달해 주고 싶을때 쓰는 방법 */}\r\n        {/* <Link to={{\r\n            pathname:\"/about\",//이건 가고자 하는 주소(여기에 파라미터를 붙여서 보내도됨 ?id=fkjsdkf같은것. 근데 기본값으로 보내는게 더 깔끔하고 좋음)\r\n            state:{//여기에 보내고싶은 정보 담으면 될듯\r\n                fromNavigation : true\r\n            }\r\n        }}>About</Link> */}\r\n        <Link to=\"/about\">About</Link>\r\n    </div>\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\n// npm install react-router-dom\n// HashRouter는 주소 뒤에 #이 붙고 BrowserRouter는 주소뒤에 아무것도 안붙음\n// 깃허브 페이지에 업로드할땐 BrowserRouter보다 HashRouter가 더 낫다 그래서 HashRouter쓰는듯\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App(){\n  return (\n  <HashRouter>\n    <Navigation/>\n    {/* router는 렌더링 할때 path를 보고 하는데 /home/introduction 이렇게하면 home 라우터랑 introduction라우터가 합쳐진게 나옴 */}\n    {/* exact를 빼면 /자체를 라우터로 여겨서 /가 들어가면 일단 home을 렌더링하고 */}\n    {/* 그뒤에 /가 들어간 /about을 렌더링해서 home만 띄우고 싶은데 죄다 떠버림 */}\n    <Route path=\"/\" exact={true} component={Home}/>\n    <Route path=\"/about\" component={About}/>\n    {/* movie.js 에서 id를 변수로 줘서 여기서 id는 변수입니다를 표시하기위해 :id로 한것 */}\n    <Route path=\"/movie/:id\" component={Detail}/>\n  </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}